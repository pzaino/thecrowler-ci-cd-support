---
  name: Release thecrowler-ci-cd-support

  on:
    workflow_dispatch:
      inputs:
        dry_run:
          description: "Do not push tags or create release"
          required: false
          default: "false"
        prerelease:
          description: "Mark as prerelease"
          required: false
          default: "false"

  permissions:
    contents: write

  jobs:
    close-release:
      runs-on: ubuntu-latest
      steps:
        - name: Harden the runner
          uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
          with:
            egress-policy: audit

        - name: Checkout repo
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
          with:
            fetch-depth: 0
            fetch-tags: true

        - name: Sanity check for action.yml
          run: |
            if [ ! -f action.yml ] && [ ! -f action.yaml ]; then
              echo "action.yml not found"
              exit 1
            fi

        - name: Read release version
          id: get_version
          run: |
            set -euo pipefail
            if [ ! -f RELEASE_VERSION.txt ]; then
              echo "RELEASE_VERSION.txt not found"
              exit 1
            fi
            VERSION="$(tr -d ' \n' < RELEASE_VERSION.txt)"
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
            echo "Release version: $VERSION"

        - name: Validate version format
          run: |
            VERSION="${{ steps.get_version.outputs.version }}"
            if ! [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "ERROR: Version must match vMAJOR.MINOR.PATCH"
              exit 1
            fi

        - name: Ensure tag does not already exist
          run: |
            VERSION="${{ steps.get_version.outputs.version }}"
            if git rev-parse "$VERSION" >/dev/null 2>&1; then
              echo "ERROR: Tag $VERSION already exists"
              exit 1
            fi

        - name: Create and push vX.Y.Z tag
          if: ${{ inputs.dry_run != 'true' }}
          run: |
            set -euo pipefail
            VERSION="${{ steps.get_version.outputs.version }}"
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git tag -a "$VERSION" -m "Release $VERSION"
            git push origin "$VERSION"

        - name: Find previous tag for changelog link
          id: prev
          run: |
            VERSION="${{ steps.get_version.outputs.version }}"
            PREV=$(git describe --tags --abbrev=0 "${VERSION}^" 2>/dev/null || true)
            echo "prev_tag=$PREV" >> "$GITHUB_OUTPUT"

        - name: Create GitHub release
          if: ${{ inputs.dry_run != 'true' }}
          uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
          with:
            tag_name: ${{ steps.get_version.outputs.version }}
            name: Release ${{ steps.get_version.outputs.version }}
            body: |
              Release ${{ steps.get_version.outputs.version }}

              **Full Changelog**:
              https://github.com/${{ github.repository }}/compare/${{ steps.prev.outputs.prev_tag }}...${{ steps.get_version.outputs.version }}
            generate_release_notes: true
            make_latest: true
            prerelease: ${{ inputs.prerelease == 'true' }}

        - name: Update floating tags vMAJOR and vMAJOR.MINOR
          if: ${{ inputs.dry_run != 'true' }}
          run: |
            set -euo pipefail
            VERSION="${{ steps.get_version.outputs.version }}"
            MAJOR="${VERSION#v}"; MAJOR="${MAJOR%%.*}"
            REST="${VERSION#v$MAJOR.}"; MINOR="${REST%%.*}"

            git tag -fa "v${MAJOR}" -m "v${MAJOR} -> ${VERSION}" "${VERSION}"
            git tag -fa "v${MAJOR}.${MINOR}" -m "v${MAJOR}.${MINOR} -> ${VERSION}" "${VERSION}"
            git push origin --force "v${MAJOR}" "v${MAJOR}.${MINOR}"

        - name: Dry run notice
          if: ${{ inputs.dry_run == 'true' }}
          run: echo "[DRY RUN] Would have created tag and release for ${{ steps.get_version.outputs.version }}"
